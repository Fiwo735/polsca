# This is a basic workflow to help you get started with Actions

name: Build and Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Build the LLVM submodule then cache it. Do not rebuild if hit in the
  # cache.
  build-llvm:
    name: Build LLVM
    runs-on: ubuntu-20.04
    steps:
      # Clone the Phism repo and its submodules. Do shallow clone to save clone
      # time.
      - name: Get Phism
        uses: actions/checkout@v2
        with:
          submodules: "true"

      # Extract the LLVM submodule hash for use in the cache key.
      - name: Get LLVM Hash
        id: get-llvm-hash
        run: echo "::set-output name=hash::$(git rev-parse @:./llvm)"
        shell: bash

      # Print out clang version
      - name: Get clang version
        id: get-clang-version
        run: clang --version
        shell: bash

      # Try to fetch LLVM from the cache.
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: llvm
          key: ${{ runner.os }}-llvm-install-${{ steps.get-llvm-hash.outputs.hash }}

      # Build LLVM if we didn't hit in the cache.
      - name: Rebuild and Install LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          ./scripts/build-llvm.sh ci
    # Installing the results into the cache is an action which is automatically
    # added by the cache action above.

  # --- end of build-llvm job.


